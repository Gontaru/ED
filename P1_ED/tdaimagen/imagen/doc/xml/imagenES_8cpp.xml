<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="imagenES_8cpp" kind="file" language="C++">
    <compoundname>imagenES.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">fstream</includes>
    <includes local="no">string</includes>
    <includes refid="imagenES_8h" local="yes">imagenES.h</includes>
    <incdepgraph>
      <node id="16">
        <label>imagenES.h</label>
        <link refid="imagenES_8h"/>
      </node>
      <node id="12">
        <label>imagenES.cpp</label>
        <link refid="imagenES.cpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>string</label>
      </node>
      <node id="14">
        <label>fstream</label>
      </node>
      <node id="13">
        <label>iostream</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="imagenES_8cpp_1a16834dd3756f7baf1e5ef710ad7b0e3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imagenES_8h_1a8914f6544a484741b05c092d9e7522ed" kindref="member">TipoImagen</ref></type>
        <definition>TipoImagen LeerTipo</definition>
        <argsstring>(ifstream &amp;f)</argsstring>
        <name>LeerTipo</name>
        <param>
          <type>ifstream &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>funcion que lee la extension del fichero f </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>fichero a leer el tipo imagen </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TipoImagen leido </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="imagenES.cpp" line="20" column="1" bodyfile="imagenES.cpp" bodystart="20" bodyend="37"/>
        <referencedby refid="imagenES_8h_1a03340a1e1e4a88385c972bb4af463649" compoundref="imagenES_8cpp" startline="117" endline="134">LeerImagenPGM</referencedby>
        <referencedby refid="imagenES_8h_1a05aea20533de5bbd02789f76aafbb99b" compoundref="imagenES_8cpp" startline="96" endline="113">LeerImagenPPM</referencedby>
        <referencedby refid="imagenES_8h_1acaa5fb277940aceed29f86c093a3d89c" compoundref="imagenES_8cpp" startline="46" endline="49">LeerTipoImagen</referencedby>
      </memberdef>
      <memberdef kind="function" id="imagenES_8cpp_1acaa5fb277940aceed29f86c093a3d89c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="imagenES_8h_1a8914f6544a484741b05c092d9e7522ed" kindref="member">TipoImagen</ref></type>
        <definition>TipoImagen LeerTipoImagen</definition>
        <argsstring>(const char *nombre)</argsstring>
        <name>LeerTipoImagen</name>
        <param>
          <type>const char *</type>
          <declname>nombre</declname>
        </param>
        <briefdescription>
<para>funcion que lee la cabecera de un fichero f </para>        </briefdescription>
        <detaileddescription>
<para>Devuelve el tipo de imagen del archivo.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nombre</parametername>
</parameternamelist>
<parameterdescription>
<para>a leer el tipo imagen </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TipoImagen leido </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="imagenES.cpp" line="46" column="1" bodyfile="imagenES.cpp" bodystart="46" bodyend="49"/>
        <references refid="imagenES_8cpp_1a16834dd3756f7baf1e5ef710ad7b0e3b" compoundref="imagenES_8cpp" startline="20" endline="37">LeerTipo</references>
        <referencedby refid="classImagen_1ae315b88ee45fbfccc4ae204c79834f0c" compoundref="imagen_8cpp" startline="110" endline="163">Imagen::CargarImagen</referencedby>
      </memberdef>
      <memberdef kind="function" id="imagenES_8cpp_1ab090ad072f47dc1ffcfcb900c3334936" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char SaltarSeparadores</definition>
        <argsstring>(ifstream &amp;f)</argsstring>
        <name>SaltarSeparadores</name>
        <param>
          <type>ifstream &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>funcion que salta los espacio en blanco </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>fichero a leer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>f != null </para></simplesect>
<simplesect kind="return"><para>el siguiente caracter despues de un espacio en blanco </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="imagenES.cpp" line="59" column="1" bodyfile="imagenES.cpp" bodystart="59" bodyend="66"/>
        <referencedby refid="imagenES_8cpp_1a0e193b2477b18f021255d69362992859" compoundref="imagenES_8cpp" startline="77" endline="90">LeerCabecera</referencedby>
      </memberdef>
      <memberdef kind="function" id="imagenES_8cpp_1a0e193b2477b18f021255d69362992859" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LeerCabecera</definition>
        <argsstring>(ifstream &amp;f, int &amp;fils, int &amp;cols)</argsstring>
        <name>LeerCabecera</name>
        <param>
          <type>ifstream &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>fils</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>cols</declname>
        </param>
        <briefdescription>
<para>funcion que lee la cabecera de un fichero f </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>fichero a leer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fils</parametername>
</parameternamelist>
<parameterdescription>
<para>filas de la imagen </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cols</parametername>
</parameternamelist>
<parameterdescription>
<para>columnas de la imagen </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>f != null </para></simplesect>
<simplesect kind="return"><para>true si se ha leido correctamente </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="imagenES.cpp" line="77" column="1" bodyfile="imagenES.cpp" bodystart="77" bodyend="90"/>
        <references refid="imagenES_8cpp_1ab090ad072f47dc1ffcfcb900c3334936" compoundref="imagenES_8cpp" startline="59" endline="66">SaltarSeparadores</references>
        <referencedby refid="imagenES_8h_1a03340a1e1e4a88385c972bb4af463649" compoundref="imagenES_8cpp" startline="117" endline="134">LeerImagenPGM</referencedby>
        <referencedby refid="imagenES_8h_1a05aea20533de5bbd02789f76aafbb99b" compoundref="imagenES_8cpp" startline="96" endline="113">LeerImagenPPM</referencedby>
      </memberdef>
      <memberdef kind="function" id="imagenES_8cpp_1a05aea20533de5bbd02789f76aafbb99b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char *</type>
        <definition>unsigned char* LeerImagenPPM</definition>
        <argsstring>(const char *nombre, int &amp;fils, int &amp;cols)</argsstring>
        <name>LeerImagenPPM</name>
        <param>
          <type>const char *</type>
          <declname>nombre</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>fils</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>cols</declname>
        </param>
        <briefdescription>
<para>Lee una imagen de tipo PPM. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nombre</parametername>
</parameternamelist>
<parameterdescription>
<para>archivo a leer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fils</parametername>
</parameternamelist>
<parameterdescription>
<para>filas Parámetro de salida con las filas de la imagen. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cols</parametername>
</parameternamelist>
<parameterdescription>
<para>columnas Parámetro de salida con las columnas de la imagen. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>puntero a una nueva zona de memoria que contiene <emphasis>filas</emphasis> x <emphasis>columnas</emphasis> x 3 bytes que corresponden a los colores de todos los píxeles en formato RGB (desde la esquina superior izqda a la inferior drcha). En caso de que no no se pueda leer, se devuelve cero. (0). </para></simplesect>
<simplesect kind="post"><para>En caso de éxito, el puntero apunta a una zona de memoria reservada en memoria dinámica. Será el usuario el responsable de liberarla. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="imagenES.cpp" line="96" column="1" bodyfile="imagenES.cpp" bodystart="96" bodyend="113"/>
        <references refid="imagenES_8cpp_1a0e193b2477b18f021255d69362992859" compoundref="imagenES_8cpp" startline="77" endline="90">LeerCabecera</references>
        <references refid="imagenES_8cpp_1a16834dd3756f7baf1e5ef710ad7b0e3b" compoundref="imagenES_8cpp" startline="20" endline="37">LeerTipo</references>
        <referencedby refid="classImagen_1ae315b88ee45fbfccc4ae204c79834f0c" compoundref="imagen_8cpp" startline="110" endline="163">Imagen::CargarImagen</referencedby>
      </memberdef>
      <memberdef kind="function" id="imagenES_8cpp_1a03340a1e1e4a88385c972bb4af463649" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char *</type>
        <definition>unsigned char* LeerImagenPGM</definition>
        <argsstring>(const char *nombre, int &amp;fils, int &amp;cols)</argsstring>
        <name>LeerImagenPGM</name>
        <param>
          <type>const char *</type>
          <declname>nombre</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>fils</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>cols</declname>
        </param>
        <briefdescription>
<para>Lee una imagen de tipo PGM. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nombre</parametername>
</parameternamelist>
<parameterdescription>
<para>archivo a leer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fils</parametername>
</parameternamelist>
<parameterdescription>
<para>filas Parámetro de salida con las filas de la imagen. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cols</parametername>
</parameternamelist>
<parameterdescription>
<para>columnas Parámetro de salida con las columnas de la imagen. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>puntero a una nueva zona de memoria que contiene <emphasis>filas</emphasis> x <emphasis>columnas</emphasis> bytes que corresponden a los grises de todos los píxeles (desde la esquina superior izqda a la inferior drcha). En caso de que no no se pueda leer, se devuelve cero. (0). </para></simplesect>
<simplesect kind="post"><para>En caso de éxito, el puntero apunta a una zona de memoria reservada en memoria dinámica. Será el usuario el responsable de liberarla. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="imagenES.cpp" line="117" column="1" bodyfile="imagenES.cpp" bodystart="117" bodyend="134"/>
        <references refid="imagenES_8cpp_1a0e193b2477b18f021255d69362992859" compoundref="imagenES_8cpp" startline="77" endline="90">LeerCabecera</references>
        <references refid="imagenES_8cpp_1a16834dd3756f7baf1e5ef710ad7b0e3b" compoundref="imagenES_8cpp" startline="20" endline="37">LeerTipo</references>
        <referencedby refid="classImagen_1ae315b88ee45fbfccc4ae204c79834f0c" compoundref="imagen_8cpp" startline="110" endline="163">Imagen::CargarImagen</referencedby>
      </memberdef>
      <memberdef kind="function" id="imagenES_8cpp_1ae149be8653b9f8c7321ac40577e7518c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool EscribirImagenPPM</definition>
        <argsstring>(const char *nombre, const unsigned char *datos, const int fils, const int cols)</argsstring>
        <name>EscribirImagenPPM</name>
        <param>
          <type>const char *</type>
          <declname>nombre</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>datos</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>fils</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>cols</declname>
        </param>
        <briefdescription>
<para>Escribe una imagen de tipo PPM. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nombre</parametername>
</parameternamelist>
<parameterdescription>
<para>archivo a escribir </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>datos</parametername>
</parameternamelist>
<parameterdescription>
<para>punteros a los <emphasis>f</emphasis> x <emphasis>c</emphasis> x 3 bytes que corresponden a los valores de los píxeles de la imagen en formato RGB. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fils</parametername>
</parameternamelist>
<parameterdescription>
<para>filas de la imagen </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cols</parametername>
</parameternamelist>
<parameterdescription>
<para>columnas de la imagen </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>si ha tenido éxito en la escritura. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="imagenES.cpp" line="138" column="1" bodyfile="imagenES.cpp" bodystart="138" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="imagenES_8cpp_1a4b649cc272f02649563791d5ed75b557" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool EscribirImagenPGM</definition>
        <argsstring>(const char *nombre, const unsigned char *datos, const int fils, const int cols)</argsstring>
        <name>EscribirImagenPGM</name>
        <param>
          <type>const char *</type>
          <declname>nombre</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>datos</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>fils</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>cols</declname>
        </param>
        <briefdescription>
<para>Escribe una imagen de tipo PGM. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nombre</parametername>
</parameternamelist>
<parameterdescription>
<para>archivo a escribir </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>datos</parametername>
</parameternamelist>
<parameterdescription>
<para>punteros a los <emphasis>f</emphasis> x <emphasis>c</emphasis> bytes que corresponden a los valores de los píxeles de la imagen de grises. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fils</parametername>
</parameternamelist>
<parameterdescription>
<para>f filas de la imagen </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cols</parametername>
</parameternamelist>
<parameterdescription>
<para>c columnas de la imagen </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>si ha tenido éxito en la escritura. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="imagenES.cpp" line="155" column="1" bodyfile="imagenES.cpp" bodystart="155" bodyend="169"/>
        <referencedby refid="classImagen_1a0fc6e5dceec4d621041299fd12e017c4" compoundref="imagen_8cpp" startline="166" endline="182">Imagen::GuardarImagen</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Fichero con definiciones para la E/S de imágenes. </para>    </briefdescription>
    <detaileddescription>
<para>Permite la E/S de archivos de tipo PGM,PPM </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="8"><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="imagenES_8h" kindref="compound">imagenES.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="imagenES_8cpp_1a16834dd3756f7baf1e5ef710ad7b0e3b" refkind="member"><highlight class="normal"><ref refid="imagenES_8h_1a8914f6544a484741b05c092d9e7522ed" kindref="member">TipoImagen</ref><sp/><ref refid="imagenES_8cpp_1a16834dd3756f7baf1e5ef710ad7b0e3b" kindref="member">LeerTipo</ref>(ifstream&amp;<sp/>f){</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c1,c2;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><ref refid="imagenES_8h_1a8914f6544a484741b05c092d9e7522ed" kindref="member">TipoImagen</ref><sp/>res=<sp/>IMG_DESCONOCIDO;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(f.peek()!=</highlight><highlight class="charliteral">&apos;P&apos;</highlight><highlight class="normal">){}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>f.ignore();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>c1=f.get();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(c1){</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;5&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IMG_PGM;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;6&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IMG_PPM;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;G&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IMG_PGM;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;P&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IMG_PPM;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>_____________________________________________________________________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="imagenES_8h_1acaa5fb277940aceed29f86c093a3d89c" refkind="member"><highlight class="normal"><ref refid="imagenES_8h_1a8914f6544a484741b05c092d9e7522ed" kindref="member">TipoImagen</ref><sp/><ref refid="imagenES_8cpp_1acaa5fb277940aceed29f86c093a3d89c" kindref="member">LeerTipoImagen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*nombre){</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>ifstream<sp/>f(nombre);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="imagenES_8cpp_1a16834dd3756f7baf1e5ef710ad7b0e3b" kindref="member">LeerTipo</ref>(f);</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>_____________________________________________________________________________</highlight></codeline>
<codeline lineno="59" refid="imagenES_8cpp_1ab090ad072f47dc1ffcfcb900c3334936" refkind="member"><highlight class="comment"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="imagenES_8cpp_1ab090ad072f47dc1ffcfcb900c3334936" kindref="member">SaltarSeparadores</ref><sp/>(ifstream&amp;<sp/>f){</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>c=<sp/>f.get();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(isspace(c));</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>f.putback(c);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>_____________________________________________________________________________</highlight></codeline>
<codeline lineno="77" refid="imagenES_8cpp_1a0e193b2477b18f021255d69362992859" refkind="member"><highlight class="comment"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="imagenES_8cpp_1a0e193b2477b18f021255d69362992859" kindref="member">LeerCabecera</ref><sp/>(ifstream&amp;<sp/>f,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>fils,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>cols){</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxvalor;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>linea;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="imagenES_8cpp_1ab090ad072f47dc1ffcfcb900c3334936" kindref="member">SaltarSeparadores</ref>(f)==</highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getline(f,linea);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>f<sp/>&gt;&gt;<sp/>cols<sp/>&gt;&gt;<sp/>fils<sp/>&gt;&gt;<sp/>maxvalor;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="comment">/*str<sp/>&amp;&amp;*/</highlight><highlight class="normal"><sp/>f<sp/>&amp;&amp;<sp/>fils&gt;0<sp/>&amp;&amp;<sp/>fils&lt;5000<sp/>&amp;&amp;<sp/>cols&gt;0<sp/>&amp;&amp;<sp/>cols&lt;5000){</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.get();<sp/></highlight><highlight class="comment">//<sp/>Saltamos<sp/>separador</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//<sp/>_____________________________________________________________________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="imagenES_8h_1a05aea20533de5bbd02789f76aafbb99b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="imagenES_8cpp_1a05aea20533de5bbd02789f76aafbb99b" kindref="member">LeerImagenPPM</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*nombre,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>fils,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>cols){</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*res=0;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>fils=0;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>cols=0;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>ifstream<sp/>f(nombre);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="imagenES_8cpp_1a16834dd3756f7baf1e5ef710ad7b0e3b" kindref="member">LeerTipo</ref>(f)==IMG_PPM){</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="imagenES_8cpp_1a0e193b2477b18f021255d69362992859" kindref="member">LeerCabecera</ref><sp/>(f,<sp/>fils,<sp/>cols)){</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[fils*cols*3];</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.read(reinterpret_cast&lt;char<sp/>*&gt;(res),fils*cols*3);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!f){</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>res;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res=<sp/>0;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//<sp/>_____________________________________________________________________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="imagenES_8h_1a03340a1e1e4a88385c972bb4af463649" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="imagenES_8cpp_1a03340a1e1e4a88385c972bb4af463649" kindref="member">LeerImagenPGM</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*nombre,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>fils,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>cols){</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*res=0;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>fils=0;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>cols=0;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>ifstream<sp/>f(nombre);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="imagenES_8cpp_1a16834dd3756f7baf1e5ef710ad7b0e3b" kindref="member">LeerTipo</ref>(f)==IMG_PGM){</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="imagenES_8cpp_1a0e193b2477b18f021255d69362992859" kindref="member">LeerCabecera</ref><sp/>(f,<sp/>fils,<sp/>cols)){</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[fils*cols];</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f.read(reinterpret_cast&lt;char<sp/>*&gt;(res),fils*cols);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!f){</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>res;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res=<sp/>0;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//<sp/>_____________________________________________________________________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="imagenES_8h_1ae149be8653b9f8c7321ac40577e7518c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="imagenES_8cpp_1ae149be8653b9f8c7321ac40577e7518c" kindref="member">EscribirImagenPPM</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*nombre,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*datos,<sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fils,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cols){</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>ofstream<sp/>f(nombre);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>res=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f){</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>f<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;P6&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>f<sp/>&lt;&lt;<sp/>cols<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fils<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>f<sp/>&lt;&lt;<sp/>255<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>f.write(reinterpret_cast&lt;const<sp/>char<sp/>*&gt;(datos),fils*cols*3);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!f)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">//<sp/>_____________________________________________________________________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="imagenES_8h_1a4b649cc272f02649563791d5ed75b557" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="imagenES_8cpp_1a4b649cc272f02649563791d5ed75b557" kindref="member">EscribirImagenPGM</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*nombre,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*datos,<sp/></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fils,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cols){</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>ofstream<sp/>f(nombre);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>res=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f){</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>f<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;P5&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>f<sp/>&lt;&lt;<sp/>cols<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fils<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>f<sp/>&lt;&lt;<sp/>255<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>f.write(reinterpret_cast&lt;const<sp/>char<sp/>*&gt;(datos),fils*cols);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!f)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Fin<sp/>Fichero:<sp/>imagenES.cpp<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="imagenES.cpp"/>
  </compounddef>
</doxygen>
