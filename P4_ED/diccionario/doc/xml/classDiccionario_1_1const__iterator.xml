<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classDiccionario_1_1const__iterator" kind="class" language="C++" prot="public">
    <compoundname>Diccionario::const_iterator</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classDiccionario_1_1const__iterator_1ad0c1c12cc398e1ee49ccf46a89cf027c" prot="private" static="no" mutable="no">
        <type>list&lt; <ref refid="structdata" kindref="compound">data</ref>&lt; T, U &gt; &gt;::<ref refid="classDiccionario_1_1const__iterator" kindref="compound">const_iterator</ref></type>
        <definition>list&lt;data&lt;T,U&gt; &gt;::const_iterator Diccionario&lt; T, U &gt;::const_iterator::it</definition>
        <argsstring></argsstring>
        <name>it</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/diccionario.h" line="219" column="1" bodyfile="include/diccionario.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classDiccionario_1_1const__iterator_1ad36be158dde0129b4e0d03d0e454a26b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Diccionario</definition>
        <argsstring></argsstring>
        <name>Diccionario</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/diccionario.h" line="252" column="1" bodyfile="include/diccionario.h" bodystart="252" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classDiccionario_1_1const__iterator_1a41fced4f0843d04af3c4e737c77b53f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Diccionario&lt; T, U &gt;::const_iterator::const_iterator</definition>
        <argsstring>()</argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/diccionario.h" line="224" column="1" bodyfile="include/diccionario.h" bodystart="224" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="classDiccionario_1_1const__iterator_1af923feb3b386f14de993ff221b8b19d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classDiccionario_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
        <definition>const_iterator&amp; Diccionario&lt; T, U &gt;::const_iterator::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/diccionario.h" line="227" column="1" bodyfile="include/diccionario.h" bodystart="227" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="classDiccionario_1_1const__iterator_1accef51f7cda1149d52a187986ad328cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classDiccionario_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
        <definition>const_iterator&amp; Diccionario&lt; T, U &gt;::const_iterator::operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/diccionario.h" line="233" column="1" bodyfile="include/diccionario.h" bodystart="233" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="classDiccionario_1_1const__iterator_1a8d616c186d5d40873e0354ed2739dbd8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structdata" kindref="compound">data</ref>&lt; T, U &gt; &amp;</type>
        <definition>const data&lt;T,U&gt;&amp; Diccionario&lt; T, U &gt;::const_iterator::operator*</definition>
        <argsstring>()</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/diccionario.h" line="238" column="1" bodyfile="include/diccionario.h" bodystart="238" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="classDiccionario_1_1const__iterator_1a506f760dafc0b7d5215b924e98fe8522" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Diccionario&lt; T, U &gt;::const_iterator::operator==</definition>
        <argsstring>(const const_iterator &amp;i) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classDiccionario_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/diccionario.h" line="243" column="1" bodyfile="include/diccionario.h" bodystart="243" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="classDiccionario_1_1const__iterator_1a6915b38389c484f4caecc455d8b1a311" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Diccionario&lt; T, U &gt;::const_iterator::operator!=</definition>
        <argsstring>(const const_iterator &amp;i) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classDiccionario_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/diccionario.h" line="247" column="1" bodyfile="include/diccionario.h" bodystart="247" bodyend="249"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/diccionario.h" line="217" column="1" bodyfile="include/diccionario.h" bodystart="217" bodyend="254"/>
    <listofallmembers>
      <member refid="classDiccionario_1_1const__iterator_1a41fced4f0843d04af3c4e737c77b53f1" prot="public" virt="non-virtual"><scope>Diccionario::const_iterator</scope><name>const_iterator</name></member>
      <member refid="classDiccionario_1_1const__iterator_1ad36be158dde0129b4e0d03d0e454a26b" prot="public" virt="non-virtual"><scope>Diccionario::const_iterator</scope><name>Diccionario</name></member>
      <member refid="classDiccionario_1_1const__iterator_1ad0c1c12cc398e1ee49ccf46a89cf027c" prot="private" virt="non-virtual"><scope>Diccionario::const_iterator</scope><name>it</name></member>
      <member refid="classDiccionario_1_1const__iterator_1a6915b38389c484f4caecc455d8b1a311" prot="public" virt="non-virtual"><scope>Diccionario::const_iterator</scope><name>operator!=</name></member>
      <member refid="classDiccionario_1_1const__iterator_1a8d616c186d5d40873e0354ed2739dbd8" prot="public" virt="non-virtual"><scope>Diccionario::const_iterator</scope><name>operator*</name></member>
      <member refid="classDiccionario_1_1const__iterator_1af923feb3b386f14de993ff221b8b19d1" prot="public" virt="non-virtual"><scope>Diccionario::const_iterator</scope><name>operator++</name></member>
      <member refid="classDiccionario_1_1const__iterator_1accef51f7cda1149d52a187986ad328cb" prot="public" virt="non-virtual"><scope>Diccionario::const_iterator</scope><name>operator--</name></member>
      <member refid="classDiccionario_1_1const__iterator_1a506f760dafc0b7d5215b924e98fe8522" prot="public" virt="non-virtual"><scope>Diccionario::const_iterator</scope><name>operator==</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
